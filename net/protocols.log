
# ref
[1]:https://blog.packagecloud.io/eng/2017/02/06/monitoring-tuning-linux-networking-stack-sending-data/
[Monitoring and Tuning the Linux Networking Stack: Sending Data][1]

# History
## Maybe not useful
[The Design Philosophy of the DARPA Internet Protocols](http://ccr.sigcomm.org/archive/1995/jan95/ccr-9501-clark.pdf)
[History of TCP/IP](http://student.ing-steen.se/IPv4/TCP-IP.pdf)
## MUST-READ 
### Packet switching
[Packet switching](https://en.wikipedia.org/wiki/Packet_switching)
### [End-to-end principle](https://en.wikipedia.org/wiki/End-to-end_principle)
[END-TO-END ARGUMENTS IN SYSTEM DESIGN](http://web.mit.edu/Saltzer/www/publications/endtoend/endtoend.pdf)
### Layering
[HISTORY OF IP ADDRESSES PART 2: HOW TCP/IP CHANGED EVERYTHING](https://www.colocationamerica.com/blog/history-of-ip-address-part-2-tcp-ip)
[what's the difference between Transfer, Transport and Transmission as the noun](https://english.stackexchange.com/questions/56443/whats-the-difference-between-transfer-transport-and-transmission-as-the-noun)
[Comments on Internet Protocol and TCP](https://www.rfc-editor.org/ien/ien2.txt)
We are screwing up in our design of internet protocols by violating the
principle of layering. Specifically we are trying to use TCP to do two
things: serve as a host level end to end protocol, and to serve as an
internet packaging and routing protocol. These two things should be
provided in a layered and modular way. I suggest that a new distinct
internetwork protocol is needed, and that TCP be used strictly as a host
level end to end protocol. --Jon Postel  ien2
The Transmission Control Program was split into two distinct protocols, the Transmission Control Protocol and the Internet Protocol.

# TCP
https://tools.ietf.org/html/rfc793
[A Protocol for Packet Network Intercommunication](https://www.cs.princeton.edu/courses/archive/fall06/cos561/papers/cerf74.pdf)
## Reliability
* lost, duplicated, or delivered out of order
sequence number to each octet transmitted
acknowledgment
* Damage
[a checksum to each segment transmitted](http://www.tcpipguide.com/free/t_TCPChecksumCalculationandtheTCPPseudoHeader-2.htm)

## Flow Control
[Sliding window protocol](http://www.tcpipguide.com/free/t_TCPSlidingWindowDataTransferandAcknowledgementMech-2.htm)

## Multiplexing
port

## Connections



# Internet protocol
https://tools.ietf.org/html/rfc791
## Addressing
A name indicates what we seek.  An address indicates where it is.  A route indicates how to get there.
Shoch, J., "Inter-Network Naming, Addressing, and Routing," COMPCON, IEEE Computer Society, Fall 1978.
## Fragmentation
https://www.kernel.org/doc/Documentation/networking/segmentation-offloads.txt

# Checksum
https://www.kernel.org/doc/Documentation/networking/checksum-offloads.txt

# LQO
* mtu
ping -c 1 -M do -s 2000 8.8.8.8

* mss
sudo tcpdump -s0 -p -ni enp0s31f6 '(ip and ip[20+13] & tcp-syn != 0)'
send: tcp_advertise_mss
tcp_current_mss
https://medium.com/fcamels-notes/%E7%94%A8-systemtap-%E6%89%BE%E5%87%BA-tcp-%E5%A6%82%E4%BD%95%E6%B1%BA%E5%AE%9A-mss-%E7%9A%84%E5%80%BC-4b6b7a969d04
mss derives from MTU
rfc6691
      When TCP is used in a situation where either the IP or TCP headers
      are not minimum, the sender must reduce the amount of TCP data in
      any given packet by the number of octets used by the IP and TCP
      options.

* send tcp message
server:
nc -l -p 2046
nc  127.0.0.1 2046
