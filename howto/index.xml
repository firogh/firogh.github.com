<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Howto on f(x) </title>
      <generator uri="https://gohugo.io">Hugo</generator>
    <link>http://firoyang.org/howto/</link>
    <language>en-us</language>
    <author>Firo Yang</author>
    
    <updated>Wed, 02 Jan 2019 00:00:00 UTC</updated>
    
    <item>
      <title>Kernel memory bug - SLAB&#39;s 3 lists are corrupted.</title>
      <link>http://firoyang.org/howto/bug_mm_1/</link>
      <pubDate>Wed, 02 Jan 2019 00:00:00 UTC</pubDate>
      <author>Firo Yang</author>
      <guid>http://firoyang.org/howto/bug_mm_1/</guid>
      <description>

&lt;p&gt;Recently, I was working on a kernel memory bug.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://apibugzilla.suse.com/show_bug.cgi?id=1118875&#34;&gt;https://apibugzilla.suse.com/show_bug.cgi?id=1118875&lt;/a&gt;&lt;br /&gt;
L3: kernel BUG at ../mm/slab.c:2804! bad LRU list and active values in page structs in possible use-after-free&lt;/p&gt;

&lt;p&gt;After digging the binary vmcore file of kdump, I got the following findings.&lt;/p&gt;

&lt;h1 id=&#34;node-0&#34;&gt;Node 0&lt;/h1&gt;

&lt;h2 id=&#34;partial&#34;&gt;Partial&lt;/h2&gt;

&lt;p&gt;list page.lru  -H 0xffff8801a7c01348 -s page.lru,s_mem,active,slab_cache,flags &amp;gt;n0p.log&lt;br /&gt;
n0p -&amp;gt; n0f=0xffff8801a7c01358&lt;/p&gt;

&lt;h2 id=&#34;full&#34;&gt;Full&lt;/h2&gt;

&lt;p&gt;list page.lru  -H 0xffff8801a7c01358 -s page.lru,s_mem,active,slab_cache,flags &amp;gt;n0f.log&lt;br /&gt;
n0f -&amp;gt;&lt;br /&gt;
ffffea0006902380&lt;br /&gt;
    lru = {&lt;br /&gt;
      next = 0xffffea0080ed53e0,&lt;br /&gt;
      prev = 0xffffea00405f8ae0&lt;br /&gt;
    }&lt;br /&gt;
    s_mem = 0xffff8801a408e000&lt;br /&gt;
      active = 16&lt;br /&gt;
    slab_cache = 0xffff8801a7c00400&lt;br /&gt;
  flags = 6755398367314048&lt;br /&gt;
ffffea0080ed53c0&lt;br /&gt;
    lru = {&lt;br /&gt;
      next = 0xffffea00422a34e0,&lt;br /&gt;
      prev = 0xffffea00069023a0&lt;br /&gt;
    }&lt;br /&gt;
    s_mem = 0xffff88203b54f000&lt;br /&gt;
      active = 7&lt;br /&gt;
    slab_cache = 0xffff8801a7c00400&lt;br /&gt;
  flags = 24769796876796032&lt;br /&gt;
&amp;hellip; -&amp;gt; n1f = 0xffff881107c00358&lt;/p&gt;

&lt;h1 id=&#34;node-1&#34;&gt;Node 1&lt;/h1&gt;

&lt;h2 id=&#34;partial-1&#34;&gt;Partial&lt;/h2&gt;

&lt;p&gt;crash&amp;gt; list page.lru  -H 0xffff881107c00348 -s page.lru,s_mem,active,slab_cache,flags &amp;gt;n1p.log&lt;br /&gt;
nip-&amp;gt; SLAB ffffea0043ab74e0 -&amp;gt; 0xffff881107c00348 = n1p&lt;br /&gt;
SLAB ffffea0043ab74e0&amp;rsquo;s prev pointing to 0xffff881107c00358&lt;/p&gt;

&lt;h2 id=&#34;full-1&#34;&gt;Full&lt;/h2&gt;

&lt;p&gt;crash&amp;gt; list page.lru  -H 0xffff881107c00358 -s page.lru,s_mem,active,slab_cache,flags &amp;gt;n1f.log&lt;br /&gt;
n1f-&amp;gt; SLAB ffffea0043ab74e0  -&amp;gt; &amp;hellip; -&amp;gt; 0xffff881107c00348 = n1p&lt;/p&gt;

&lt;p&gt;This issue occured on a NUMA system with 2 memory nodes.&lt;br /&gt;
Both node 0 and node 1&amp;rsquo;s SLAB&amp;rsquo;s partial and full lists were corrupted. After looking into this issue a few days, I talked to Vlastimil Babka.&lt;br /&gt;
He provided a fix for this issue. That is 7810e6781e0fcbca78b91cf65053f895bf59e85f - mm, page_alloc: do not break __ GFP_THISNODE by zonelist reset.&lt;/p&gt;

&lt;p&gt;Now, I have a question: why did I cannot solve this issue?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用mutt收发邮件</title>
      <link>http://firoyang.org/howto/mutt/</link>
      <pubDate>Sat, 25 Apr 2015 00:00:00 UTC</pubDate>
      <author>Firo Yang</author>
      <guid>http://firoyang.org/howto/mutt/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://handsomecheung.github.io/mutt-manual-cn/mutt-manual-1.5.19-cn.html&#34;&gt;Mutt中文手册&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://deferred.io/2011/09/23/sane-gmail-filters-for-high-volume-mailing-lists.html&#34;&gt;sane Gmail filters for high-volume mailing lists&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://upload.wikimedia.org/wikipedia/en/5/5f/Trigun_manga.jpg&#34; alt=&#34;Trigun&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;sidebar-message-stats&#34;&gt;Sidebar message stats&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=850604&#34;&gt;https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=850604&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;###Reference&lt;br /&gt;
昨天用web Gmail给社区的maillist回信, 被退信了. 提示Gmail发送的邮件包含html.&lt;br /&gt;
这才想起来社区的mailist只接收:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;No MIME, no links, no compression, no attachments.  Just plain text&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;我之前发给社区的邮件是用git sendmail发给maillist, 不会有这个问题.&lt;br /&gt;
有点不方便, 今天决定使用mutt.&lt;br /&gt;
需要mutt, fetchmail, procmail, msmtp, proxychains(天朝专用), vim/emacs&lt;br /&gt;
发一个邮件, 需要这么多程序啊, 以前一直以为一个mutt就够了, 还Gmail方便啊.&lt;br /&gt;
mutt的作用类似于胶水, 把其他程序联系起来.&lt;br /&gt;
fetchmail收, procmail过滤spam mail, msmtp 用来发送, proxychains 翻x墙,&lt;br /&gt;
vim/emacs用来编辑邮件.&lt;/p&gt;

&lt;p&gt;###收邮件&lt;br /&gt;
其实, 并不像网上博客中说的那样, fetchmail 和procmail并不是必须的.&lt;br /&gt;
参考mutt官网的&lt;a href=&#34;http://dev.mutt.org/trac/wiki/UseCases/Gmail&#34;&gt;UserStory/GMailOverIMAP&lt;/a&gt;&lt;br /&gt;
你就可以想Web gmail一样实时推送邮件到你mutt了.&lt;br /&gt;
之后在.muttrc中加入:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bind index G imap-fetch-mail
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样你就可以用G这个命令在mutt中主动同步gmail了.&lt;br /&gt;
此时翻墙用户启动mutt, proxychains会输出代理信息过滤到/dev/null&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;proxychains mutt 2&amp;gt; /dev/null
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;###mutt 与发邮件&lt;br /&gt;
具体的配置看wangcong的&lt;a href=&#34;http://wangcong.org/2007/03/09/-e4-bd-bf-e7-94-a8mutt-e5-a4-84-e7-90-86-e7-94-b5-e5-ad-90-e9-82-ae-e4-bb-b6-2/&#34;&gt;使用mutt处理电子邮件&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;删邮件&#34;&gt;删邮件&lt;/h3&gt;

&lt;p&gt;在.muttrc配置如下，你在mutt中delete的mail在gmail的web上看不到了.&lt;br /&gt;
&lt;code&gt;set delete=yes&lt;/code&gt;&lt;br /&gt;
可能需要在mutt中配置gamil trash, 求反馈.&lt;/p&gt;

&lt;p&gt;###其他&lt;br /&gt;
* 国内gmail用户要用proxychains 做下代理, 这样就能使用gmail了:&lt;br /&gt;
&lt;code&gt;set sendmail=&amp;quot;proxychains /usr/bin/msmtp&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;wangcong的blog中的配置&amp;lt;不太符合习惯, 按着习惯和美感应该是:&lt;br /&gt;
&lt;code&gt;set indent_str=&amp;quot;&amp;gt;&amp;quot;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;mutt取消当前命令用ctrl g&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;靠gmail 存了两份发送邮件, 把这句注释掉, gmail自己本身会缓存的:&lt;br /&gt;
&lt;code&gt;set record = &amp;quot;+[Gmail]/Sent Mail&amp;quot;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;faq&#34;&gt;FAQ&lt;/h1&gt;

&lt;p&gt;Error sending message, child exited 78 ().&lt;br /&gt;
chmod 600 .msmtprc&lt;br /&gt;
echo &amp;ldquo;test&amp;rdquo; |mutt -s &amp;ldquo; first_test&amp;rdquo; firogm@gmail.com&lt;/p&gt;

&lt;p&gt;Error sending message, child exited 66 (Cannot open input.).&lt;br /&gt;
change tls_trust_file /etc/ssl/certs/ca-bundle.crt&lt;br /&gt;
to tls_trust_file /etc/ssl/certs/ca-certificates.crt&lt;/p&gt;

&lt;p&gt;Error sending message, child exited 68 (Host unknown.).&lt;br /&gt;
echo &amp;ldquo;test&amp;rdquo; |proxychains mutt -s &amp;ldquo; first_test&amp;rdquo; firogm@gmail.com&lt;/p&gt;

&lt;h1 id=&#34;outlook-office-365&#34;&gt;Outlook office 365&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://support.office.com/en-us/article/pop-and-imap-email-settings-for-outlook-8361e398-8af4-4e97-b147-6c6c4ac95353&#34;&gt;https://support.office.com/en-us/article/pop-and-imap-email-settings-for-outlook-8361e398-8af4-4e97-b147-6c6c4ac95353&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use crash utility to examine the running system</title>
      <link>http://firoyang.org/howto/crash_utility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <author>Firo Yang</author>
      <guid>http://firoyang.org/howto/crash_utility/</guid>
      <description>

&lt;h1 id=&#34;prepare&#34;&gt;Prepare&lt;/h1&gt;

&lt;h2 id=&#34;kernel-pages-info&#34;&gt;Kernel pages info&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://docs.fedoraproject.org/en-US/fedora/rawhide/system-administrators-guide/kernel-module-driver-configuration/Manually_Upgrading_the_Kernel/&#34;&gt;Overview of Kernel Packages&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;enbale-debuginfo&#34;&gt;Enbale debuginfo&lt;/h2&gt;

&lt;p&gt;/etc/yum.repos.d/fedora-updates.repo&lt;br /&gt;
/etc/yum.repos.d/fedora.repo&lt;br /&gt;
or&lt;br /&gt;
dnf &amp;ndash;enablerepo=debug install kernel-debuginfo&lt;/p&gt;

&lt;h2 id=&#34;locate-vmlinux&#34;&gt;locate vmlinux&lt;/h2&gt;

&lt;p&gt;rpm -ql kernel-debuginfo | grep vmlinux&lt;/p&gt;

&lt;h1 id=&#34;start-to-use-crash&#34;&gt;Start to use crash&lt;/h1&gt;

&lt;p&gt;sudo crash /usr/lib/debug/lib/modules/4.18.9-200.fc28.x86_64/vmlinux&lt;/p&gt;

&lt;h2 id=&#34;help&#34;&gt;help&lt;/h2&gt;

&lt;p&gt;crash help list&lt;/p&gt;

&lt;h2 id=&#34;do-some-practices&#34;&gt;do some practices&lt;/h2&gt;

&lt;p&gt;crash&amp;gt; p file_systems&lt;br /&gt;
file_systems = $2 = (struct file_system_type *) 0xffffffffad2ab380&lt;br /&gt;
crash&amp;gt; list file_system_type.next -s file_system_type.name 0xffffffffad2ab380&lt;br /&gt;
ffffffffad2ab380&lt;br /&gt;
  name = 0xffffffffad11b3ce &amp;ldquo;sysfs&amp;rdquo;&lt;br /&gt;
ffffffffad212700&lt;br /&gt;
  name = 0xffffffffad0e37b9 &amp;ldquo;rootfs&amp;rdquo;&lt;br /&gt;
ffffffffad2b7460&lt;br /&gt;
  name = 0xffffffffad0a65af &amp;ldquo;ramfs&amp;rdquo;&lt;br /&gt;
ffffffffad2a2b40&lt;br /&gt;
  name = 0xffffffffad0e3e67 &amp;ldquo;bdev&amp;rdquo;&lt;br /&gt;
&amp;hellip;&lt;br /&gt;
crash&amp;gt; struct file_system_type ffffffffad2a2b40&lt;br /&gt;
struct file_system_type {&lt;br /&gt;
  name = 0xffffffffad0e3e67 &amp;ldquo;bdev&amp;rdquo;,&lt;br /&gt;
  fs_flags = 0,&lt;br /&gt;
  mount = 0xffffffffac2e4e60,&lt;br /&gt;
  kill_sb = 0xffffffffac2a8fd0,&lt;br /&gt;
  owner = 0x0,&lt;br /&gt;
  next = 0xffffffffad2ab080,&lt;br /&gt;
  fs_supers = {&lt;br /&gt;
    first = 0xffff9f9d5600a0e8&lt;br /&gt;
  },&lt;br /&gt;
  s_lock_key = {&lt;No data fields&gt;},&lt;br /&gt;
  s_umount_key = {&lt;No data fields&gt;},&lt;br /&gt;
  s_vfs_rename_key = {&lt;No data fields&gt;},&lt;br /&gt;
  s_writers_key = 0xffffffffad2a2b78,&lt;br /&gt;
  i_lock_key = {&lt;No data fields&gt;},&lt;br /&gt;
  i_mutex_key = {&lt;No data fields&gt;},&lt;br /&gt;
  i_mutex_dir_key = {&lt;No data fields&gt;}&lt;br /&gt;
}&lt;br /&gt;
crash&amp;gt; mod -s e1000e&lt;br /&gt;
     MODULE       NAME                        SIZE  OBJECT FILE&lt;br /&gt;
ffffffffc0304700  e1000e                    282624  /usr/lib/debug/usr/lib/modules/4.18.9-200.fc28.x86_64/kernel/drivers/net/ethernet/intel/e1000e/e1000e.ko.debug&lt;br /&gt;
crash&amp;gt; struct module ffffffffc0304700&lt;br /&gt;
struct module {&lt;br /&gt;
  state = MODULE_STATE_LIVE,&lt;br /&gt;
  list = {&lt;br /&gt;
    next = 0xffffffffc02c4208,&lt;br /&gt;
    prev = 0xffffffffc033f648&lt;br /&gt;
  },&lt;br /&gt;
&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
