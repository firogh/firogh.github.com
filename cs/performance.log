
# SPE
Software Performance Engineering: http://www.caveman.work/2019/07/12/Software-Performance-Engineering/

# Performance 
https://arxiv.org/pdf/1811.01412.pdf
https://en.wikipedia.org/wiki/Computer_performance
[Velocity 2015: Linux Performance Tools](http://www.brendangregg.com/Slides/Velocity2015_LinuxPerfTools.pdf)
[Linux Performance Tools, Brendan Gregg, part 1 of 2](https://www.youtube.com/watch?v=FJW8nGV4jxY)
## [Mel Gorman on analysis of performance issue I requested](https://bugzilla.suse.com/show_bug.cgi?id=1165925
Given that there is no differences in software versions, I would suggest focusing on the environment and see where time is being lost. The screenshots indicate that CPU utilisation is low but confirm with mpstat it really is low. The screenshots also suggest that processes are sleeping and this may be a problem with storage. Look at iostat -x for gen1 and gen2 to see if there are differences in IO or time spent blocked waiting on IO. If time is being lost on IO, pay attention to the storage configuration and check with fio if there really are differences in storage performance. Check also for differences in the IO scheduler configuration. Ideally, a supportconfig for gen1 and gen2 deployments would be attached to see if there are any obvious differences.
## Metrics
Disk I/O latency: = response time = Service time + Wait time
Network latency: can refer to the time it takes for a message to make a round trip between endpoints.
I/O wait: account_idle_time
## Tuning
## Program bug error analysis
For debugging.

# Cost
[A Concurrency Cost Hierarchy](https://travisdowns.github.io/blog/2020/07/06/concurrency-costs.html)

# Resource analysis
Utilization, Saturation
Throughput/IOPS, latency
vmstat, iostat, mpstat

# Workload analysis
Latency, Throughput

[Linux Load Averages: Solving the Mystery](http://www.brendangregg.com/blog/2017-08-08/linux-load-averages.html)
http://oliveryang.net/2017/12/linux-high-loadavg-analysis-1/
## D Process state
[Off-CPU Analysis](http://www.brendangregg.com/offcpuanalysis.html#Analysis)
[D stands for Disk wait/sleep 4BSD ps man page](https://www.tuhs.org/cgi-bin/utree.pl?file=4BSD/usr/man/cat1/ps.1)
[Processes in an Uninterruptible Sleep (D) State](https://support.microfocus.com/kb/doc.php?id=7002725)

# Methodology
Timeline vs capacity

# FS
fsperf
