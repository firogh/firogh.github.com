# BPF
[Kernel internals](https://www.kernel.org/doc/Documentation/networking/filter.txt)
[Series for BPF on LWN.net](https://lwn.net/Articles/740157/)

# seccomp
[seccomp Wikipedia](https://en.wikipedia.org/wiki/Seccomp)
[Official site seccompsandbox](https://code.google.com/archive/p/seccompsandbox/wikis/overview.wiki)
Limit a process to a specific set of system calls.

## Implementation
[Implementation seccomp: secure computing support](https://git.kernel.org/pub/scm/linux/kernel/git/tglx/history.git/commit/?id=d949d0ec9c601f2b148bed3cdb5f87c052968554)
For current implementation, check do_syscall_64 -> syscall_trace_enter
[dynamic seccomp policies (using BPF filters)](https://groups.google.com/forum/#!topic/linux.kernel/TvZ2EzBtwmA%5B1-25%5D)

## User case
Chrome adobe flash player

# JIT compiler
[A JIT for packet filters](https://lwn.net/Articles/437981/)
[Demystify eBPF JIT Compiler](https://www.youtube.com/watch?v=KDr033U2fF4) [Slide](https://www.netronome.com/media/documents/demystify-ebpf-jit-compiler.pdf)
## Implementation
[net: filter: Just In Time compiler](https://lwn.net/Articles/437884/)

# Verifier
~/kernel/tools/testing/selftests/bpf/test_verifier.c

# BPF for tracing


## Implementation
[tracing: accelerate tracing filters with BPF](https://lwn.net/Articles/598545/)
[tracing: attach eBPF programs to tracepoints/syscalls/kprobe](https://groups.google.com/forum/#!msg/fa.linux.kernel/5IVrvIlkKeI/O_Eh8epAjkAJ)

# BPF for tracepoints
## Implementation
perf, bpf: allow bpf programs attach to tracepoints - 98b5c2c65c2951772a8fc661f50d675e450e8bce
[tracing: attach eBPF programs to tracepoints and syscalls](https://groups.google.com/d/msg/fa.linux.kernel/5IVrvIlkKeI/iAO9gb4dvA4J)
