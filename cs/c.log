# c
---
tags: [ cs ] 
title: The programming language
date: 2015-02-27T15:46:14+08:00 
category: cs
---

# Ref
http://c-faq.com/index.html
[C specifitions JTC1/SC22/WG14 - C](http://www.open-std.org/jtc1/sc22/wg14/)

# size of zero-length array
[Although the size of a zero-length array is zero](https://gcc.gnu.org/onlinedocs/gcc/Zero-Length.html)
sock or sock_common

# Initialization
## unilialzed of members of struct on automiact storage 
If there are fewer initializers in a brace-enclosed list than there are elements or members
of an aggregate, or fewer characters in a string literal used to initialize an array of known
size than there are elements in the array, the remainder of the aggregate shall be
initialized implicitly the same as objects that have static storage duration.

# escape
[Escape sequences in C](https://en.wikipedia.org/wiki/Escape_sequences_in_C)

# struct
[static struct?](https://stackoverflow.com/questions/7259830/why-and-when-to-use-static-structures-in-c-programming)

# cast
[On casting void *: I said "you don't cast", not "you don't need to cast"](https://stackoverflow.com/questions/605845/do-i-cast-the-result-of-malloc/605858#605858)
## Conversion 
* only effect to scalar type data
error: conversion to non-scalar type requested

# lvalue rvalue modfiable rvalue
[Understanding lvalues and rvalues in C and C++](http://eli.thegreenplace.net/2011/12/15/understanding-lvalues-and-rvalues-in-c-and-c)
If a variable/expression  has a address, it's of lvalue.

# array
[Zero-based numbering](https://en.wikipedia.org/wiki/Zero-based_numbering)
## Array decay
数组退化的初衷, 可能是K&R当年计算资源紧缺, 导致不允许函数传值copy数组内容.
[Exception to array not decaying into a pointer?](http://stackoverflow.com/questions/17752978/exception-to-array-not-decaying-into-a-pointer)
### exception
c11 6.3.2.1 Lvalues, arrays, and function designators Except when it is 
* the operand of the sizeof operator, 
* the _Alignof operator, or the
* unary & operator, or 
* is a string literal used to initialize an array, an expression that has type 
‘‘array of type’’ is converted to an expression with type ‘‘pointer to type’’ 
that points to the initial element of the array object and is not an lvalue. 
If the array object has register storage class, the behavior is undefined.
## Array name ++ ? Invalid?

# Integer Promotion
[Deep C: Integer Promotion](http://www.idryman.org/blog/2012/11/21/integer-promotion/)
[Integral Promotions](https://msdn.microsoft.com/en-us/library/fc9te331.aspx)
0xF int
0xFFFFFFFF unsigned int
