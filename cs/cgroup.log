# cgroup
[Resource control at Facebook](https://lwn.net/Articles/764761/)
## conceptions
commit ddbcc7e8e50aefe467c01cac3dec71f118cd8ac2
Author: Paul Menage <menage@google.com>
Date:   Thu Oct 18 23:39:30 2007 -0700
    Task Control Groups: basic task cgroup framework
+Control Groups provide a mechanism for aggregating/partitioning sets of
+tasks, and all their future children, into hierarchical groups with
+specialized behaviour.
+Definitions:
+A *cgroup* associates a set of tasks with a set of parameters for one
+or more subsystems.
+A *subsystem* is a module that makes use of the task grouping
+facilities provided by cgroups to treat groups of tasks in
+particular ways. A subsystem is typically a "resource controller" that
+schedules a resource or applies per-cgroup limits, but it may be
+anything that wants to act on a group of processes, e.g. a
+virtualization subsystem.
+A *hierarchy* is a set of cgroups arranged in a tree, such that
+every task in the system is in exactly one of the cgroups in the
+hierarchy, and a set of subsystems; each subsystem has system-specific
+state attached to each cgroup in the hierarchy.  Each hierarchy has
+an instance of the cgroup virtual filesystem associated with it.
+At any one time there may be multiple active hierachies of task cgroups.
## firo on building cgroup
cgroups, controller, hierarchy

# cgroup v2
## Why mutiple hierarchy failed?
[Fixing control groups](https://lwn.net/Articles/484251/)
[[RFD] cgroup: about multiple hierarchies](https://lkml.org/lkml/2012/2/21/379)
## Unifiyed hierarchy
[The unified control group hierarchy in 3.16](https://lwn.net/Articles/601840/)
[What's new in control groups (cgroups) version 2](https://www.youtube.com/watch?v=yZpNsDe4Qzg) comparing to v1
[cgroupv2: Linux's new unified control group hierarchy](https://chrisdown.name/2017/03/01/cgroupv2-linux-new-cgroup-hierarchy.html)
[Control groups, part 7: To unity and beyond](https://lwn.net/Articles/608425/)
 
# Translations
find cgroup by task: task->css_set, find task by cgroup: cgroup->css_sets
/proc/cgroups: proc_cgroupstats_show; /proc/self/cgroup: proc_cgroup_show and for_each_active_root
before renameing, see cg_cgroup_link
## init_task and cgroup init
cgroup_init_early or cgroup_init for init_css_set
## Add task to cgroup
attach_task_by_pid -> cgroup_attach_task -> ...-> find_existing_css_set
## cgroup_mount 
sb->s_root->d_fsdata = root_cgrp;
## create cgroup
cgroup_create, cpu_cgroup_create, sched_create_group
## Unified Hierarchy - cgrp_dfl_root
[cgroup: prepare for the default unified hierarchy](https://lore.kernel.org/lkml/1394740213-17626-1-git-send-email-tj@kernel.org/)
[cgroup: implement unified hierarchy](https://lore.kernel.org/lkml/1395974461-12735-1-git-send-email-tj@kernel.org/)
commit 3dd06ffa9df99aa88f4e01eaa0c9d3cb362430b0
Refs: v3.14-rc1-104-g3dd06ffa9df9
Author:     Tejun Heo <tj@kernel.org>
AuthorDate: Wed Mar 19 10:23:54 2014 -0400
    cgroup: rename cgroup_dummy_root and related names
    The dummy root will be repurposed to serve as the default unified
    hierarchy.  Let's rename things in preparation.
    * s/cgroup_dummy_root/cgrp_dfl_root/
    * s/cgroupfs_root/cgroup_root/ as we don't do fs part directly anymore
    * s/cgroup_root->top_cgroup/cgroup_root->cgrp/ for brevity

# cgroup v1
[Control groups series by Neil Brown](https://lwn.net/Articles/604609/)
[Documentation/cgroups/cgroups.txt](https://lwn.net/Articles/524935/) or Documentation/cgroup-v1/cgroups.txt
## Why Multiple hierarchy is adopted in cgroup v1?
https://www.kernel.org/doc/Documentation/admin-guide/cgroup-v1/cgroups.rst
+Multiple hierarchy support is provided to allow for situations where
+the division of tasks into cgroups is distinctly different for
+different subsystems - having parallel hierarchies allows each
+hierarchy to be a natural division of tasks, without having to handle
+complex combinations of tasks that would be present if several
+unrelated subsystems needed to be forced into the same tree of
+cgroups.
# Hierarchy in cgroup v1
[Thus it is possible to have 12 different hierarchies, one for each subsystem, or a single hierarchy with all 12 subsystems attached, or any other combination in between.](https://lwn.net/Articles/606699/)
## Dummy hierarchy
rootnode.subsys_list, cgroup_init_subsys() for dummytop group inilialization
cgroup_init_early and cgroup_init, static struct cgroupfs_root rootnode;
## Active hierarchy
cgroup_mount; struct cgroupfs_root stands for a hierarchy; all hierarchies are liked in the roots as shown in proc_cgroup_show. They are called active root or hierarchy.
