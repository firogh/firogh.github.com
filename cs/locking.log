# LQO
[An Overview of Kernel Lock Improvements](https://events.static.linuxfound.org/sites/events/files/slides/linuxcon-2014-locking-final.pdf)

# Lock
Advisory lock vs mandatory lock

# Block(wait) vs Lock

# Granularity

# Locking in kernel
[A must read: Linus on semaphore and mutex](https://yarchive.net/comp/linux/semaphores.html)
[Linus on recursive lock](https://yarchive.net/comp/linux/recursive_locks.html)
[Unreliable Guide To Locking](https://www.kernel.org/pub/linux/kernel/people/rusty/kernel-locking/index.html)
[An Overview of Kernel Lock Improvements](http://events17.linuxfoundation.org/sites/events/files/slides/linuxcon-2014-locking-final.pdf)
[Waiman Long: Recent Locking Improvements in the Linux Kernel](https://www.youtube.com/watch?v=8DdawGCvFBU)
[I would hate user space locking if it weren’t that sexy](https://pdfs.semanticscholar.org/de01/4ce9cc57c7e3f55efa5185cd7aad3a13b9c5.pdf)

# File locking
[Mandatory File Locking For The Linux Operating System](https://www.kernel.org/doc/Documentation/filesystems/mandatory-locking.txt)
[Linux 2.6 中的文件锁](https://www.ibm.com/developerworks/cn/linux/l-cn-filelock/index.html)
[Demo for File locking](http://voyager.deanza.edu/~perry/lock.html)


# rwlock
include/linux/rwlock.h
_QW_WMASK
_QW_WAITING
queued_read_trylock
queued_read_lock


# Spinlock
## Ticket spinlock
[Ticket spinlocks](https://lwn.net/Articles/267968/) and [Remove Ticket spinlocks](https://patchwork.kernel.org/patch/9121811/)
## qspinlock
[MCS spinlocks](http://www.cs.rochester.edu/~scott/papers/1991_TOCS_synch.pdf)
[MCS locks and qspinlocks](https://lwn.net/Articles/590243/)
[MCS locks on quora](https://www.quora.com/How-does-an-MCS-lock-work)
[Cancellable MCS spinlock rework](https://lwn.net/Articles/604130/)
[Question about qspinlock nest](https://lkml.org/lkml/2019/1/10/799)
## Bit spinlock
include/linux/bit_spinlock.h

# Mutex
[A must read: Generic Mutex Subsystem](https://lwn.net/Articles/164802/)
[A must read2: Documentation/locking/mutex-design.txt](https://www.kernel.org/doc/Documentation/locking/mutex-design.txt)
commit 6053ee3b32e3437e8c1e72687850f436e779bd49
Author: Ingo Molnar <mingo@elte.hu>
Date:   Mon Jan 9 15:59:19 2006 -0800
    [PATCH] mutex subsystem, core
## Mutex and semaphore
[Since regular semaphores are almost much extinct in the kernel (most users now rely on mutexes or rwsems)](https://lwn.net/Articles/600111/)
## Priority inversion and inheritance
[Linus on priority inheritance](https://yarchive.net/comp/linux/priority_inheritance.html)
[Priority inheritance in the kernel](https://lwn.net/Articles/178253/)
rt_mutex: RT Mutexes: blocking mutual exclusion locks with PI support
## simple mutex
[MUTEX: Introduce simple mutex implementation](https://lwn.net/Articles/163807/)
Seems lost in competetion with Ingo's generic mutex.

# RW semaphore
[rwsem: Support optimistic spinning](https://lwn.net/Articles/598577/)
mmap_sem
__RWSEM_INIT_COUNT(name)        .count = ATOMIC_LONG_INIT(RWSEM_UNLOCKED_VALUE)
#define RWSEM_UNLOCKED_VALUE            0x00000000L
up_read -> dec 
down_read_trylock
if add < 0;
        writer is holding the semaphore
else
        get lock

down_read -> inc 
if add < 0 # in memory
        call_rwsem_down_read_failed and wait sem->wait_list
else jns 
        get lock

down_write_trylock
if eax = 0;
        get lock by add RWSEM_ACTIVE_WRITE_BIAS
else
        other holds lock

down_write
        add RWSEM_ACTIVE_WRITE_BIAS  # in memory!
Lock:
= 0 is unlocked.
> 0 : Reader holds lock
< 0 : Writer holds lock

# rwsem-xadd
commit 3cf2f34e1a3d4d5ff209d087925cf950e52f4805
Author: Tim Chen <tim.c.chen@linux.intel.com>
Date:   Fri May 2 12:53:57 2014 -0700
    rwsem: Add comments to explain the meaning of the rwsem's count field
kernel/locking/rwsem-xadd.c

# rwsem-spinlock - obselete
tglx: commit ed6eefe4382ab3a72d70922d401b7c8003513f13
Author: Linus Torvalds <torvalds@athlon.transmeta.com>
Date:   Mon Feb 4 18:13:52 2002 -0800
    v2.4.3.6 -> v2.4.3.7
      - David Howells: more rw-sem stuff
No clear reason for adding rwsem-spinlock. Maybe for generic purpose.
[locking/rwsem: Remove rwsem-spinlock.c & use rwsem-xadd.c for all archs](https://lkml.org/lkml/2019/2/13/1278)
